{"version":3,"file":"static/js/561.58228392.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm /ContactForm .styled.jsx","components/ContactForm /ContactForm .jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { Puff } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        zIndex: '2',\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n        background: 'rgba(0, 0, 0, 0.2)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Puff\n        height=\"80\"\n        width=\"80\"\n        radius={1}\n        color=\"#4fa94d\"\n        ariaLabel=\"puff-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\n\nexport const getFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\nexport const getIsloading = state => state.contacts.isLoading;\n","import styled from 'styled-components';\n\n\nexport const Button = styled.button`\n  background-color: #5b9962;\n  color: white;\n  margin-left: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 5px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 10px;\n  font-weight: 600;\n  text-transform: capitalize;\n   &:hover {\n   background-color : #8bc34a;\n  }\n`;\n\nexport const Input = styled.input`\ndisplay: block;\nborder: 1px solid black;\n&:hover {\n  border-color : #8bc34a;\n  outline: none;\n  }\n`;\nexport const Form = styled.form`\nwidth: 30%;\n`;\nexport const Label = styled.label`\ndisplay: block;\npadding-bottom: 10px;\n\n`;","import { useDispatch, useSelector } from 'react-redux'; \nimport { useState } from 'react';\nimport { addContact } from 'redux/operations';\nimport { Button, Input, Form, Label } from './ContactForm .styled';\nimport { selectContacts } from 'redux/selectors';\n\nexport function ContactForm({ onSubmit }) { \n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  \n  const inputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const resetForm = () => {\n  setName('');\n    setNumber('');\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isExist = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (isExist) {\n      alert('This contact is existed!!!!');\n      return;\n    }\n\n    dispatch(addContact({ name, number, }));\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={inputChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={inputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\n\nexport const Button = styled.button`\n  background-color: #cf3535;\n  color: white;\n  margin-left: 20px;\n  padding: 5px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 10px;\n  font-weight: 600;\n  text-transform: capitalize;\n  \n  &:hover {\n   background-color : #e91e63;\n  }\n`;\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\n\ngap: 0.5em;`;\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\nwidth: 30%;\n`;\n","import PropTypes from 'prop-types';\nimport { Button, List, Item } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {contacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ name, number, id }) => {\n          return (\n            <Item key={id}>\n              <p>\n                <b>{name}:</b>{' '}\n              </p>{' '}\n              <p>{number}</p>\n              <Button onClick={() => handleDelete(id)}>Delete</Button>\n            </Item>\n          );\n        })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Block = styled.div`\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Block } from './Filter.styled';\nimport { addFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <Block>\n      <p>Find contacts by name</p>\n      <input onChange={event => dispatch(addFilter(event.target.value))} />\n    </Block>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { getIsloading } from 'redux/selectors';\nimport { ContactForm } from 'components/ContactForm /ContactForm ';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction Contacts() {\n  const isLoading = useSelector(getIsloading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <h2>Contact-list</h2>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\nexport default Contacts;"],"names":["Loader","style","position","top","left","zIndex","width","height","overflow","background","display","alignItems","justifyContent","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","getFilteredContacts","filter","contact","toLowerCase","includes","getIsloading","isLoading","Button","styled","Input","Form","Label","ContactForm","onSubmit","useSelector","useState","setName","number","setNumber","dispatch","useDispatch","inputChange","event","target","preventDefault","alert","addContact","onChange","type","pattern","title","required","List","Item","ContactList","sort","localeCompare","id","onClick","deleteContact","handleDelete","Block","Filter","addFilter","useEffect","getContacts"],"sourceRoot":""}